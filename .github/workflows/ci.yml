name: CI

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0', '3.1', '3.2', '3.3']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true

      - name: Cache APT packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: cmake llvm-15 llvm-15-dev libclang-15-dev
          version: 1.0

      - name: Install Ruby dependencies
        run: bundle install

      - name: Build and install CastXML
        run: |
          git clone https://github.com/CastXML/CastXML.git
          mkdir -p ${{ github.workspace }}/CastXMLBuild
          mkdir -p ${{ github.workspace }}/CastXMLInstall
          cd ${{ github.workspace }}/CastXMLBuild
          cmake ../CastXML -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/CastXMLInstall -DLLVM_DIR=/usr/lib/llvm-15/cmake -DClang_DIR=/usr/lib/cmake/clang-15
          make -j$(nproc)
          make install

      - name: Add CastXML to PATH and verify installation
        run: |
          echo "${{ github.workspace }}/CastXMLInstall/bin" >> $GITHUB_PATH
          echo "Current PATH: $PATH"
          which castxml || echo "castxml not found in PATH"
          ls -l ${{ github.workspace }}/CastXMLInstall/bin || echo "CastXMLInstall/bin directory not found"
          if [ -f "${{ github.workspace }}/CastXMLInstall/bin/castxml" ]; then
            echo "CastXML executable exists"
            file ${{ github.workspace }}/CastXMLInstall/bin/castxml
            ${{ github.workspace }}/CastXMLInstall/bin/castxml --version
          else
            echo "CastXML executable not found"
          fi

      - name: Run tests
        run: bundle exec rspec

      - name: Lint code for consistent style
        run: bundle exec rubocop --parallel

  summarize:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Summarize matrix
        run: |
          echo "Matrix jobs completed."
          echo "Check individual job results for details."